                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Jul 23 23:56:19 2019
                                      5 ;--------------------------------------------------------
                                      6 	.module main
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _delay
                                     14 	.globl _Uart_Printf
                                     15 	.globl _Initialise_Uart
                                     16 	.globl _Initialise_System_Clock
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area DATA
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area INITIALIZED
                                     25 ;--------------------------------------------------------
                                     26 ; Stack segment in internal ram 
                                     27 ;--------------------------------------------------------
                                     28 	.area	SSEG
      000000                         29 __start__stack:
      000000                         30 	.ds	1
                                     31 
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DABS (ABS)
                                     36 ;--------------------------------------------------------
                                     37 ; interrupt vector 
                                     38 ;--------------------------------------------------------
                                     39 	.area HOME
      000000                         40 __interrupt_vect:
      000000 82v00u00u00             41 	int s_GSINIT ;reset
      000004 82 00 00 00             42 	int 0x0000 ;trap
      000008 82 00 00 00             43 	int 0x0000 ;int0
      00000C 82 00 00 00             44 	int 0x0000 ;int1
      000010 82 00 00 00             45 	int 0x0000 ;int2
      000014 82 00 00 00             46 	int 0x0000 ;int3
      000018 82 00 00 00             47 	int 0x0000 ;int4
      00001C 82 00 00 00             48 	int 0x0000 ;int5
      000020 82 00 00 00             49 	int 0x0000 ;int6
      000024 82 00 00 00             50 	int 0x0000 ;int7
      000028 82 00 00 00             51 	int 0x0000 ;int8
      00002C 82 00 00 00             52 	int 0x0000 ;int9
      000030 82 00 00 00             53 	int 0x0000 ;int10
      000034 82 00 00 00             54 	int 0x0000 ;int11
      000038 82 00 00 00             55 	int 0x0000 ;int12
      00003C 82 00 00 00             56 	int 0x0000 ;int13
      000040 82 00 00 00             57 	int 0x0000 ;int14
      000044 82 00 00 00             58 	int 0x0000 ;int15
      000048 82 00 00 00             59 	int 0x0000 ;int16
      00004C 82 00 00 00             60 	int 0x0000 ;int17
      000050 82 00 00 00             61 	int 0x0000 ;int18
      000054 82 00 00 00             62 	int 0x0000 ;int19
      000058 82 00 00 00             63 	int 0x0000 ;int20
      00005C 82 00 00 00             64 	int 0x0000 ;int21
      000060 82 00 00 00             65 	int 0x0000 ;int22
      000064 82 00 00 00             66 	int 0x0000 ;int23
      000068 82 00 00 00             67 	int 0x0000 ;int24
      00006C 82 00 00 00             68 	int 0x0000 ;int25
      000070 82 00 00 00             69 	int 0x0000 ;int26
      000074 82 00 00 00             70 	int 0x0000 ;int27
      000078 82 00 00 00             71 	int 0x0000 ;int28
      00007C 82 00 00 00             72 	int 0x0000 ;int29
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME
                                     77 	.area GSINIT
                                     78 	.area GSFINAL
                                     79 	.area GSINIT
      000000                         80 __sdcc_gs_init_startup:
      000000                         81 __sdcc_init_data:
                                     82 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   83 	ldw x, #l_DATA
      000003 27 07            [ 1]   84 	jreq	00002$
      000005                         85 00001$:
      000005 72 4FuFFuFF      [ 1]   86 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   87 	decw x
      00000A 26 F9            [ 1]   88 	jrne	00001$
      00000C                         89 00002$:
      00000C AEr00r00         [ 2]   90 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   91 	jreq	00004$
      000011                         92 00003$:
      000011 D6uFFuFF         [ 1]   93 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   94 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   95 	decw	x
      000018 26 F7            [ 1]   96 	jrne	00003$
      00001A                         97 00004$:
                                     98 ; stm8_genXINIT() end
                                     99 	.area GSFINAL
      000000 CCr00r80         [ 2]  100 	jp	__sdcc_program_startup
                                    101 ;--------------------------------------------------------
                                    102 ; Home
                                    103 ;--------------------------------------------------------
                                    104 	.area HOME
                                    105 	.area HOME
      000080                        106 __sdcc_program_startup:
      000080 CCr00r33         [ 2]  107 	jp	_main
                                    108 ;	return from main will return to caller
                                    109 ;--------------------------------------------------------
                                    110 ; code
                                    111 ;--------------------------------------------------------
                                    112 	.area CODE
                                    113 ;	src/main.c: 17: void delay(unsigned long count) {
                                    114 ;	-----------------------------------------
                                    115 ;	 function delay
                                    116 ;	-----------------------------------------
      000000                        117 _delay:
      000000 52 08            [ 2]  118 	sub	sp, #8
                                    119 ;	src/main.c: 18: while (count--)
      000002 16 0B            [ 2]  120 	ldw	y, (0x0b, sp)
      000004 17 05            [ 2]  121 	ldw	(0x05, sp), y
      000006 1E 0D            [ 2]  122 	ldw	x, (0x0d, sp)
      000008                        123 00101$:
      000008 41               [ 1]  124 	exg	a, xl
      000009 6B 04            [ 1]  125 	ld	(0x04, sp), a
      00000B 41               [ 1]  126 	exg	a, xl
      00000C 16 05            [ 2]  127 	ldw	y, (0x05, sp)
      00000E 17 01            [ 2]  128 	ldw	(0x01, sp), y
      000010 9E               [ 1]  129 	ld	a, xh
      000011 1D 00 01         [ 2]  130 	subw	x, #0x0001
      000014 88               [ 1]  131 	push	a
      000015 7B 07            [ 1]  132 	ld	a, (0x07, sp)
      000017 A2 00            [ 1]  133 	sbc	a, #0x00
      000019 6B 07            [ 1]  134 	ld	(0x07, sp), a
      00001B 7B 06            [ 1]  135 	ld	a, (0x06, sp)
      00001D A2 00            [ 1]  136 	sbc	a, #0x00
      00001F 6B 06            [ 1]  137 	ld	(0x06, sp), a
      000021 84               [ 1]  138 	pop	a
      000022 0D 04            [ 1]  139 	tnz	(0x04, sp)
      000024 26 07            [ 1]  140 	jrne	00115$
      000026 4D               [ 1]  141 	tnz	a
      000027 26 04            [ 1]  142 	jrne	00115$
      000029 16 01            [ 2]  143 	ldw	y, (0x01, sp)
      00002B 27 03            [ 1]  144 	jreq	00104$
      00002D                        145 00115$:
                                    146 ;	src/main.c: 19: nop();
      00002D 9D               [ 1]  147 	nop
      00002E 20 D8            [ 2]  148 	jra	00101$
      000030                        149 00104$:
      000030 5B 08            [ 2]  150 	addw	sp, #8
      000032 81               [ 4]  151 	ret
                                    152 ;	src/main.c: 22: int main(void)
                                    153 ;	-----------------------------------------
                                    154 ;	 function main
                                    155 ;	-----------------------------------------
      000033                        156 _main:
                                    157 ;	src/main.c: 25: Initialise_System_Clock();
      000033 CDr00r00         [ 4]  158 	call	_Initialise_System_Clock
                                    159 ;	src/main.c: 27: Initialise_Uart();
      000036 CDr00r00         [ 4]  160 	call	_Initialise_Uart
                                    161 ;	src/main.c: 31: PORT(LED_PORT, DDR)  |= LED_PIN; // i.e. PB_DDR |= (1 << 5);
      000039 AE 50 07         [ 2]  162 	ldw	x, #0x5007
      00003C F6               [ 1]  163 	ld	a, (x)
      00003D AA 20            [ 1]  164 	or	a, #0x20
      00003F F7               [ 1]  165 	ld	(x), a
                                    166 ;	src/main.c: 33: PORT(LED_PORT, CR1)  |= LED_PIN; // i.e. PB_CR1 |= (1 << 5);
      000040 AE 50 08         [ 2]  167 	ldw	x, #0x5008
      000043 F6               [ 1]  168 	ld	a, (x)
      000044 AA 20            [ 1]  169 	or	a, #0x20
      000046 F7               [ 1]  170 	ld	(x), a
                                    171 ;	src/main.c: 35: while(1) 
      000047                        172 00102$:
                                    173 ;	src/main.c: 38: PORT(LED_PORT, ODR) |= LED_PIN; // PB_ODR |= (1 << 5);
      000047 AE 50 05         [ 2]  174 	ldw	x, #0x5005
      00004A F6               [ 1]  175 	ld	a, (x)
      00004B AA 20            [ 1]  176 	or	a, #0x20
      00004D F7               [ 1]  177 	ld	(x), a
                                    178 ;	src/main.c: 39: delay(100000L);
      00004E 4B A0            [ 1]  179 	push	#0xa0
      000050 4B 86            [ 1]  180 	push	#0x86
      000052 4B 01            [ 1]  181 	push	#0x01
      000054 4B 00            [ 1]  182 	push	#0x00
      000056 CDr00r00         [ 4]  183 	call	_delay
      000059 5B 04            [ 2]  184 	addw	sp, #4
                                    185 ;	src/main.c: 41: PORT(LED_PORT, ODR) &= ~LED_PIN; // PB_ODR &= ~(1 << 5);
      00005B AE 50 05         [ 2]  186 	ldw	x, #0x5005
      00005E F6               [ 1]  187 	ld	a, (x)
      00005F A4 DF            [ 1]  188 	and	a, #0xdf
      000061 F7               [ 1]  189 	ld	(x), a
                                    190 ;	src/main.c: 42: delay(300000L);
      000062 4B E0            [ 1]  191 	push	#0xe0
      000064 4B 93            [ 1]  192 	push	#0x93
      000066 4B 04            [ 1]  193 	push	#0x04
      000068 4B 00            [ 1]  194 	push	#0x00
      00006A CDr00r00         [ 4]  195 	call	_delay
      00006D 5B 04            [ 2]  196 	addw	sp, #4
                                    197 ;	src/main.c: 44: Uart_Printf("Hello world......\n\r");
      00006F AEr00r7A         [ 2]  198 	ldw	x, #___str_0+0
      000072 89               [ 2]  199 	pushw	x
      000073 CDr00r00         [ 4]  200 	call	_Uart_Printf
      000076 85               [ 2]  201 	popw	x
      000077 20 CE            [ 2]  202 	jra	00102$
      000079 81               [ 4]  203 	ret
                                    204 	.area CODE
      00007A                        205 ___str_0:
      00007A 48 65 6C 6C 6F 20 77   206 	.ascii "Hello world......"
             6F 72 6C 64 2E 2E 2E
             2E 2E 2E
      00008B 0A                     207 	.db 0x0A
      00008C 0D                     208 	.db 0x0D
      00008D 00                     209 	.db 0x00
                                    210 	.area INITIALIZER
                                    211 	.area CABS (ABS)
